{"version":3,"sources":["assets/Americas-logo.png","logo.svg","components/First.jsx","containers/Home.jsx","layout/Footer.jsx","layout/Header.jsx","layout/Layout.jsx","components/Cell.jsx","components/DataTable.jsx","containers/UploadFile.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","First","className","src","logo","alt","href","target","rel","Home","Styles","styled","div","Footer","useState","name","setName","email","setEmail","Nav","defaultActiveKey","Form","onSubmit","event","preventDefault","alert","Row","Col","Control","value","onChange","e","placeholder","required","type","Button","variant","Navbar","Brand","to","Image","Header","expand","Toggle","aria-controls","Collapse","id","Item","Link","Layout","props","Container","children","Cell","content","header","DataTable","renderHeadingRow","_cell","cellIndex","headings","key","renderRow","_row","rowIndex","rows","map","this","bind","theadMarkup","tbodyMarkup","React","departure","arrival","from","UploadFile","cssClass","onFileLoaded","data","console","log","slice","length","i","push","Set","label","forceUpdate","Table","striped","bordered","hover","Component","App","Fragment","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.81351f7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Americas-logo.37f73bb3.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nimport logo from '../logo.svg';\nimport '../App.css';\n\nconst First = () => (\n  <div className='App'>\n    <header className='App-header'>\n      <img src={logo} className='App-logo' alt='logo' />\n      <p>\n        Edit <code>src/App.js</code> and save to reload.\n      </p>\n      <a\n        className='App-link'\n        href='https://reactjs.org'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        Learn React\n      </a>\n    </header>\n  </div>\n);\n\nexport default First;\n","import React from 'react';\n\nconst Home = () => <h1>HOME</h1>;\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { Nav, Navbar, Form, Button } from 'react-bootstrap';\nimport { Image, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport logo from '../assets/Americas-logo.png';\n\nconst Styles = styled.div`\n  .nav {\n    ${'' /* height: 200px; */}\n    background-color: #408abc;\n    padding: 10px;\n  }\n  ,\n  .nav .h3 {\n    color: white;\n  }\n  a,\n  p,\n  .navbar-brand,\n  .navbar-nav .nav-link {\n    color: white;\n    margin: 10px;\n    &:hover {\n      color: black;\n      text-decoration: none;\n    }\n  }\n`;\nexport const Footer = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    alert(`${name} ; ${email}`);\n  };\n\n  return (\n    <Styles>\n      <Nav\n        defaultActiveKey='/'\n        className='container-fluid justify-content-center'\n      >\n        <Form onSubmit={handleSubmit}>\n          <h3>Register to our events</h3>\n          <Row>\n            <Col>\n              <Form.Control\n                value={name}\n                onChange={e => setName(e.target.value)}\n                placeholder='Name'\n                name='name'\n                required\n              />\n            </Col>\n            <Col>\n              <Form.Control\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                placeholder='Email'\n                type='email'\n                name='email'\n              />\n            </Col>\n            <Col>\n              <Button variant='dark' name='button-form' type='submit'>\n                Register\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n\n        <Form.Row>\n          <Navbar.Brand>\n            <Link to='/'>\n              <Image src={logo} alt='Americas-Alliance-network-logo'></Image>\n            </Link>\n          </Navbar.Brand>\n        </Form.Row>\n\n        <Form.Row className='col-12 justify-content-center'>\n          <p>Copyright Â© 2020 | Americas Alliance</p>\n          <Link to='/'> Home </Link>\n          <Link to='/Terms'>Terms of use</Link>\n          <Link to='/Policy'>Privacy policy</Link>\n          <Link to='/help'>Help</Link>\n        </Form.Row>\n      </Nav>\n    </Styles>\n  );\n};\n","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../assets/Americas-logo.png';\n\nconst Styles = styled.div`\n  position: relative;\n  color: red;\n  .navbar {\n    height: 100px;\n    background-color: #408abc;\n  }\n  a,\n  .navbar-brand,\n  .navbar-nav .nav-link {\n    color: #ffffff;\n    &:hover {\n      color: black;\n      text-decoration: none;\n    }\n  }\n`;\n\nexport const Header = () => (\n  <Styles>\n    <Navbar expand='lg'>\n      <Link to='/'>\n        <Navbar.Brand>\n          <img src={logo} alt='Americas-Alliance-network-logo'></img>\n        </Navbar.Brand>\n      </Link>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ml-auto'>\n          <Nav.Item>\n            <Nav.Link>\n              <Link to='/'>Home</Link>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link>\n              <Link to='/about'>About</Link>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link>\n              <Link to='/contact'>Contact</Link>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link>\n              <Link to='/Upload'>Upload file</Link>\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Styles>\n);\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n  min-height: calc(100vh - 300px);\n  overflow: hidden;\n  display: block;\n  position: relative;\n`;\n\nexport const Layout = props => (\n  <Styles id='reasdasd'>\n    <Container>{props.children}</Container>\n  </Styles>\n);\n","import * as React from 'react';\n\nexport default function Cell({ content, header }) {\n  const cellMarkup = header ? (\n    <th className='Cell Cell-header'>{content}</th>\n  ) : (\n    <td className='Cell'>{content}</td>\n  );\n\n  return cellMarkup;\n}\n","import * as React from 'react';\nimport Cell from './Cell';\n\nexport default class DataTable extends React.Component {\n  renderHeadingRow = (_cell, cellIndex) => {\n    const { headings } = this.props;\n\n    return (\n      <Cell\n        key={`heading-${cellIndex}`}\n        content={headings[cellIndex]}\n        header={true}\n      />\n    );\n  };\n\n  renderRow = (_row, rowIndex) => {\n    const { rows } = this.props;\n\n    return (\n      <tr key={`row-${rowIndex}`}>\n        {rows[rowIndex].map((_cell, cellIndex) => {\n          return (\n            <Cell\n              key={`${rowIndex}-${cellIndex}`}\n              content={rows[rowIndex][cellIndex]}\n            />\n          );\n        })}\n      </tr>\n    );\n  };\n\n  render() {\n    const { headings, rows } = this.props;\n\n    this.renderHeadingRow = this.renderHeadingRow.bind(this);\n    this.renderRow = this.renderRow.bind(this);\n\n    const theadMarkup = (\n      <tr key='heading'>{headings.map(this.renderHeadingRow)}</tr>\n    );\n\n    const tbodyMarkup = rows.map(this.renderRow);\n\n    return (\n      <table className='Table'>\n        <thead>{theadMarkup}</thead>\n        <tbody>{tbodyMarkup}</tbody>\n      </table>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport DataTable from '../components/DataTable';\nimport { Table } from 'react-bootstrap';\nimport CSVReader from 'react-csv-reader';\n\n//import bsCustomFileInput from 'bs-custom-file-input';\nlet headings = [];\nlet rows = [[]];\nlet departure = [];\nlet arrival = [];\nlet from = [];\nlet to = [];\n\nclass UploadFile extends Component {\n  render() {\n    const handleForce = data => {\n      console.log(data);\n\n      headings = data[0].slice(0, 15);\n      if (data.length < 10) {\n        for (let i = 1; i < data.length; i++) {\n          rows.push(data[i].slice(0, data.length));\n        }\n      } else {\n        for (let i = 1; i < 10; i++) {\n          rows.push(data[i].slice(0, 15));\n        }\n      }\n      for (let i = 1; i < data.length; i++) {\n        departure.push(data[i][0], data[i][0]);\n        arrival.push(data[i][1], data[i][1]);\n      }\n\n      departure = [...new Set(departure)];\n      arrival = [...new Set(arrival)];\n      for (let i = 0; i < departure.length; i++) {\n        from.push({ value: departure[i], label: departure[i] });\n      }\n      for (let i = 0; i < arrival.length; i++) {\n        to.push({ value: arrival[i], label: arrival[i] });\n      }\n\n      this.forceUpdate();\n    };\n\n    return (\n      <>\n        <h1>Update Prices</h1>\n        <p>Here you can add the new prices list</p>\n        <CSVReader cssClass='react-csv-input' onFileLoaded={handleForce} />\n        <Table striped bordered hover>\n          <DataTable headings={headings} rows={rows} />\n        </Table>\n      </>\n    );\n  }\n}\nexport { UploadFile, from, to };\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport First from './components/First';\nimport Home from './containers/Home';\nimport { Footer } from './layout/Footer';\nimport { Header } from './layout/Header';\nimport { Layout } from './layout/Layout';\nimport { UploadFile } from './containers/UploadFile';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          <Header />\n          <Layout>\n            <Switch>\n              <Route exact path='/about' component={First}></Route>\n              <Route exact path='/' component={Home}></Route>\n              <Route exact path='/Upload' component={UploadFile}></Route>\n              {/* <Route exact path='/Admin' component={Admin}></Route>\n            <Route exact path='/contact' component={Contact}></Route>\n            <Route component={NotFound} /> */}\n            </Switch>\n          </Layout>\n          <Footer />\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}